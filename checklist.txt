项目执行清单 (v2)
此清单将项目计划中的高级阶段分解为具体的、可操作的任务。

✅ Phase 0: 奠基与设置 (Est. 0.5 Weeks)
目标是拥有一个可运行、已连接的 "Hello World" 全栈应用。

[ ] 环境: 安装 Node.js, Docker, Git。

[ ] IDE: 安装 VS Code 及推荐插件。

[ ] Monorepo: 初始化 Nx 项目。

[ ] 插件: 安装 @nx/next 和 @nx/nest。

[ ] 应用生成: 生成 frontend 和 backend 应用。

[ ] 数据库设置: 创建 docker-compose.yml。

[ ] 配置: 创建 .env 文件并定义 DATABASE_URL。

[ ] 数据库服务: 运行 docker-compose up -d。

[ ] ORM 设置: 安装 prisma 和 @prisma/client。

[ ] ORM 初始化: 运行 npx prisma init。

[ ] Schema 定义: 使用 v2 版本的 schema 更新 prisma/schema.prisma。

[ ] DB 同步: 运行 npx prisma db push。

[ ] Client 生成: 运行 npx prisma generate。

[ ] 脚本: 添加 dev 脚本到 package.json。

**[ ] 验证: 运行 npm run dev 并确认可以访问前后端。

✅ Phase 1: 核心内容MVP (Est. 1 Week)
目标是一个可公开部署的、只读的博客。

[ ] 后端: 服务层: 创建 PrismaService；生成 PostModule；实现获取文章列表和详情的方法。

[ ] 后端: API 层: 实现 GET /api/posts 和 GET /api/posts/:slug 接口。

[ ] 前端: 数据获取: 创建 lib/api.ts 文件。

[ ] 前端: UI: 构建首页和文章详情页；创建 <PostCard> 组件；使用 react-markdown 渲染内容。

[ ] 数据填充: 手动向本地数据库添加2-3篇示例文章。

[ ] 部署: 推送至GitHub；部署前端到Vercel；部署数据库到Neon/Supabase；部署后端到Railway/Fly.io。

**[ ] 验证: 访问你的线上URL并确认可以看到文章。

✅ Phase 2: 管理员后台与内容管理 (Est. 1.5 Weeks)
目标是让你能够登录并管理内容，包括标签。

[ ] 后端: 认证与授权: 实现 AuthModule，包含登录逻辑和 JwtAuthGuard。

[ ] 后端: 标签管理:

生成 LabelModule。

实现创建、查找标签的服务逻辑。

[ ] 后端: 文章管理 API:

实现受保护的文章管理API (GET, POST, PUT, DELETE)。

在创建/更新文章的逻辑中，处理文章与标签的多对多关系。

[ ] 前端: 状态与路由: 创建 Auth Context 来管理JWT；创建受保护的 /admin 路由。

[ ] 前端: 管理后台 UI:

构建登录页、后台仪表盘（文章列表）。

构建新建/编辑文章页面。

在新建/编辑页面中集成一个标签输入组件。

**[ ] 验证: 端到端测试：登录、创建一篇带标签的文章、编辑它、然后删除它。

✅ Phase 3: 内容发现与互动 (Est. 1.5 Weeks)
目标是实现搜索、按标签筛选和评论功能。

[ ] 搜索功能:

[ ] 后端: 实现 GET /api/search?q=:query 接口，进行简单的数据库查询。

[ ] 前端: 在全局 Header 中实现搜索图标和输入框的交互。

[ ] 前端: 创建搜索结果页 (/search)。

[ ] 标签功能:

[ ] 后端: 实现 GET /api/labels/:name 接口，返回特定标签下的所有文章。

[ ] 前端: 创建标签归档页 (/labels/:name)。

[ ] 前端: 在首页的文章卡片和文章详情页中，展示可点击的标签"Pills"。

[ ] 评论功能:

[ ] 后端: 实现 CommentModule 的API。

[ ] 前端: 创建可交互的 <CommentSection> 组件。

**[ ] 验证: 测试搜索功能；点击标签能跳转到归档页；可以成功留言。

✅ Phase 4: 打磨、优化与上线 (Est. 1 Week)
目标是产品化并正式发布。

[ ] 设计: 进行全面的响应式设计审查。

[ ] UX: 添加悬停/焦点状态；创建网站页脚。

[ ] 性能: 运行 Lighthouse 审计并解决问题。

[ ] SEO: 实现动态 <title> 和 <meta> 标签；生成 sitemap.xml。

[ ] 域名: 购买并配置个人域名。

[ ] 内容: 撰写1-3篇高质量的初始文章。

**[ ] 上线: 向世界分享你的新博客！